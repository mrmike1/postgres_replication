---
    - name: Stop Postgresql
      service: name=postgresql state=stopped

    - name: Add master to pg_hba
      become_user: postgres
      lineinfile: dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf line="host    all    {{ db_user }}     {{ inventory_hostname }}/32  trust"

    - name: Add slaves IP to pg_hba.conf
      become_user: postgres
      lineinfile: dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf line="host    replication     rep     {{item}}/32  md5"
      when: item.is_new is defined and 'pslaves' in group_names
      with_items:
        - "{{ groups['pslaves'] }}"
      when:
        - "not {{hostvars[item]['recovery']['stat']['exists']}}"

    - name: Add interface IP to listen on
      become_user: postgres
      lineinfile: dest=/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf line="listen_addresses = '{{ inventory_hostname }}'"
      
    - name: Start Postgresql service
      service: name=postgresql state=started

    - name: Create {{db_name}} database
      become_user: postgres
      postgresql_db: name={{ db_name }} login_user={{ db_user }} login_password={{ db_pass }}

    - name: Drop Replication user if exists
      become_user: postgres
      shell: psql -c "drop user if exists {{ rep_user }};"

    - name: Create a Rep User
      become_user: postgres
      shell: psql -c "CREATE USER {{ rep_user }} REPLICATION LOGIN CONNECTION LIMIT 5 ENCRYPTED PASSWORD '{{ rep_password }}';"

    - name: Add postgres config directives
      become_user: postgres
      lineinfile: dest=/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf line={{ item }}
      with_items:
        - "{{ postgres_vars }}"

    - name: Restart Postgresql service
      service: name=postgresql state=restarted

    - name: Start Backup
      become_user: postgres
      shell: psql -c "select pg_start_backup('initial_backup');"

    - name: Rsync tables
      become_user: postgres
      shell: rsync -cva --inplace --exclude=*pg_xlog* /var/lib/postgresql/{{ postgresql_version }}/main/ postgres@{{ item }}:/var/lib/postgresql/{{ postgresql_version }}/main/
      with_items:
        - "{{ groups['pslaves'] }}"
      when:
        - "not {{hostvars[item]['recovery']['stat']['exists']}}"

    - name: Finish Backup
      become_user: postgres
      shell: psql -c "select pg_stop_backup();"   

